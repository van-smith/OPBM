/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class opbm_Opbm */

#ifndef _Included_opbm_Opbm
#define _Included_opbm_Opbm
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     opbm_Opbm
 * Method:    sendWindowToForeground
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_opbm_Opbm_sendWindowToForeground
  (JNIEnv *, jclass, jstring);

/*
 * Class:     opbm_Opbm
 * Method:    getHarnessCSVDirectory
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_getHarnessCSVDirectory
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    getHarnessXMLDirectory
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_getHarnessXMLDirectory
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    getHarnessTempDirectory
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_getHarnessTempDirectory
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    getScriptCSVDirectory
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_getScriptCSVDirectory
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    getScriptTempDirectory
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_getScriptTempDirectory
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    getSettingsDirectory
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_getSettingsDirectory
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    getRunningDirectory
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_getRunningDirectory
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    getCSIDLDirectory
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_getCSIDLDirectory
  (JNIEnv *, jclass, jstring);

/*
 * Class:     opbm_Opbm
 * Method:    getComponentHWND
 * Signature: (Ljava/awt/Component;)I
 */
JNIEXPORT jint JNICALL Java_opbm_Opbm_getComponentHWND
  (JNIEnv *, jclass, jobject);

/*
 * Class:     opbm_Opbm
 * Method:    setMinMaxResizeBoundaries
 * Signature: (IIIIIII)I
 */
JNIEXPORT jint JNICALL Java_opbm_Opbm_setMinMaxResizeBoundaries
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     opbm_Opbm
 * Method:    setPersistAlwaysOnTop
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_opbm_Opbm_setPersistAlwaysOnTop
  (JNIEnv *, jclass, jint);

/*
 * Class:     opbm_Opbm
 * Method:    snapshotProcesses
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_opbm_Opbm_snapshotProcesses
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    stopProcesses
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_opbm_Opbm_stopProcesses
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    GetRegistryKeyValue
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_GetRegistryKeyValue
  (JNIEnv *, jclass, jstring);

/*
 * Class:     opbm_Opbm
 * Method:    SetRegistryKeyValueAsString
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_SetRegistryKeyValueAsString
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     opbm_Opbm
 * Method:    SetRegistryKeyValueAsDword
 * Signature: (Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_SetRegistryKeyValueAsDword
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     opbm_Opbm
 * Method:    SetRegistryKeyValueAsBinary
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_opbm_Opbm_SetRegistryKeyValueAsBinary
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     opbm_Opbm
 * Method:    Office2010SaveKeys
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_opbm_Opbm_Office2010SaveKeys
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    Office2010InstallKeys
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_opbm_Opbm_Office2010InstallKeys
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    Office2010RestoreKeys
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_opbm_Opbm_Office2010RestoreKeys
  (JNIEnv *, jclass);

/*
 * Class:     opbm_Opbm
 * Method:    waitUntilSystemIdle
 * Signature: (III)F
 */
JNIEXPORT jfloat JNICALL Java_opbm_Opbm_waitUntilSystemIdle
  (JNIEnv *, jclass, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
